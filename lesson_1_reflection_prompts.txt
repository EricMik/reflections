How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It removed all the the text that hadn't changed to allow you to focus on the differences.  

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can see the entire development of the program and revert to working versions if the changes you make have unanticipated consequences.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pro is that you control the commits so that they're more logical, the con is that you might forget to commit as often as you should.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    The Git way allows you to keep all the associated files together as a snapshot in time, while the Google Docs way is more efficient because it doesn't save multiple identical copies of a file.

How can you use the commands git log and git diff to view the history of files?

    gil log gives all the commit IDs for the file while git diff will show the difference between to commits.

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
